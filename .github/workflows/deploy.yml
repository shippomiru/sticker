name: Process Images and Deploy

on:
  push:
    branches: [ main ]
  # 每周日凌晨自动运行
  schedule:
    - cron: '0 0 * * 0'
  # 手动触发
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install boto3 opencv-python pillow numpy python-slugify rembg
      
      # 如果有新图片需要处理，则运行处理脚本
      - name: Check for new images
        id: check_images
        run: |
          if [ -d "unsplash-images" ] && [ "$(ls -A unsplash-images)" ]; then
            echo "has_new_images=true" >> $GITHUB_OUTPUT
          else
            echo "has_new_images=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Process images
        if: steps.check_images.outputs.has_new_images == 'true'
        run: |
          cd api/processors
          echo "开始图片处理流程..."
          python process_with_improved_order.py
          echo "图片处理完成，开始生成元数据..."
          python metadata_generator.py
      
      # 上传图片到R2(仅当配置了R2凭证时)
      - name: Upload to R2
        if: env.R2_ACCESS_KEY_ID != ''
        run: |
          cd api/processors
          python upload_to_r2.py
        env:
          R2_ACCOUNT_ID: ${{ secrets.R2_ACCOUNT_ID }}
          R2_ACCESS_KEY_ID: ${{ secrets.R2_ACCESS_KEY_ID }}
          R2_SECRET_ACCESS_KEY: ${{ secrets.R2_SECRET_ACCESS_KEY }}
          R2_BUCKET_NAME: ${{ secrets.R2_BUCKET_NAME }}
          R2_PUBLIC_URL: ${{ secrets.R2_PUBLIC_URL }}
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'project/package-lock.json'
      
      - name: Install frontend dependencies
        run: |
          cd project
          npm ci
      
      # 设置构建环境变量
      - name: Set environment variables
        run: |
          echo "VITE_R2_CDN_URL=${{ secrets.R2_PUBLIC_URL }}" >> project/.env.production
          echo "VITE_SITE_URL=${{ secrets.SITE_URL }}" >> project/.env.production
      
      - name: Build frontend
        run: |
          cd project
          npm run build
      
      # 使用Cloudflare Pages GitHub集成时，此步骤可能不需要
      - name: Deploy to Cloudflare Pages
        if: env.CLOUDFLARE_API_TOKEN != ''
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: free-png
          directory: project/dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      
      # 发送部署完成通知
      - name: Send notification
        if: always()
        run: |
          echo "部署状态: ${{ job.status }}"
          # 可以添加Slack、邮件等通知 